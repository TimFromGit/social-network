{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descr","img","descriptionBlock","profilePhoto","alt","src","photos","large","userPhoto","profileData","fullName","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","aboutMe","Post","post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElement","posts","map","p","key","id","reverse","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","btn","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7a8afad3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descr\":\"ProfileInfo_descr__2NKsV\",\"img\":\"ProfileInfo_img__3ded6\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1EDAG\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3w1wE\",\"profileData\":\"ProfileInfo_profileData__196v4\",\"status\":\"ProfileInfo_status__3hXEC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__rFgRQ\",\"addPost\":\"MyPosts_addPost__2s4Tn\",\"btn\":\"MyPosts_btn__3Y4H7\",\"posts\":\"MyPosts_posts__2f6-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__I9142\",\"item\":\"Post_item__2QDz1\",\"message\":\"Post_message__2A-6X\",\"likesCount\":\"Post_likesCount__W_OZV\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"No status\"}\r\n                    </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deActivateEditMode}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport userPhoto from \"../../../assets/images/user.svg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status,updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.descr}>\r\n            <div className={s.img}></div>\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.profilePhoto} alt =\"\" src={profile.photos.large != null ? profile.photos.large : userPhoto}/>\r\n                <div className={s.status}>\r\n                    <span>Status: </span>\r\n                    <ProfileStatusWithHooks\r\n                        className={s.status}\r\n                        status={status}\r\n                        updateStatus={updateStatus}\r\n                    />\r\n                </div>\r\n                <div className={s.profileData}>\r\n                    <div>\r\n                        <strong>Full Name:</strong> {profile.fullName}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Facebook:</strong> {profile.contacts.facebook}\r\n                    </div>\r\n                        {profile.contacts.website\r\n                            ? <div><strong>Website:</strong> {profile.contacts.website}</div>\r\n                            : null}\r\n                    <div>\r\n                        <strong>VK:</strong> {profile.contacts.vk}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Twitter:</strong> {profile.contacts.twitter}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Instagram:</strong> {profile.contacts.instagram}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Youtube:</strong> {profile.contacts.youtube}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Github:</strong> {profile.contacts.github}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Main Link:</strong> {profile.contacts.mainLink}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Looking for a job:</strong> {profile.lookingForAJob}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Looking for a job description:</strong> {profile.lookingForAJobDescription}\r\n                    </div>\r\n                    <div>\r\n                        <strong>About me:</strong> {profile.aboutMe}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.item}>\r\n                <img src={props.img} alt=\"\"/>\r\n                <div className={s.message}>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            <div className={s.likesCount}>\r\n                <span>Likes: </span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = props.posts.map(p => (\r\n        <Post message={p.message} likesCount={p.likesCount} key={p.id} img={p.img}/>)).reverse();\r\n\r\n    // СОЗДАНИЕ ПОСТА\r\n    //функция добавления поста\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>My posts</h2>\r\n            {/*\r\n            Форма добавления поста\r\n            */}\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form className={s.addPost} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"newPostText\"\r\n                placeholder=\"Enter your message\"\r\n                validate={[required, maxLength10]}\r\n            />\r\n            <div>\r\n                <button className={s.btn}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","// import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n    //withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}