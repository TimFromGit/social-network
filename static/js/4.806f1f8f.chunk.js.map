{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","src","img","alt","to","activeClassName","active","name","Message","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","newMessage","component","Textarea","validate","required","plaseholder","btn","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","d","key","messagesElement","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,aAAe,8BAA8B,WAAa,4BAA4B,IAAM,uB,oBCAtLD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,uICahDC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAKN,EAAMO,IAAKC,IAAI,uBACzB,kBAAC,IAAD,CAASC,GAAIR,EAAMS,gBAAiBN,IAAEO,QAASX,EAAMY,Q,kBCClDC,EANC,SAACb,GACb,OACI,yBAAKG,UAAWC,IAAEU,SAAUd,EAAMc,U,yCCApCC,EAAYC,YAAiB,IAapBC,cAAU,CAACC,KAAM,wBAAjBD,CAZQ,SAACjB,GACpB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,kBAACC,EAAA,EAAD,CAAOlB,UAAWC,IAAEkB,WACbC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,uBACnB,4BAAQxB,UAAWC,IAAEwB,KAArB,WCiBGC,EAzBC,SAAC7B,GACb,IAAI8B,EAAQ9B,EAAM+B,YACdC,EAAiBF,EAAMG,QAAQC,IAAI,SAAAC,GAAC,OAAK,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAEjC,GAAIK,IAAK4B,EAAE5B,QACrF8B,EAAkBP,EAAMQ,SAASJ,IAAI,SAAAK,GAAC,OAAK,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAErC,OAMnF,OAAKF,EAAMwC,OAGP,yBAAKrC,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEqC,cACbT,GAEL,yBAAK7B,UAAWC,IAAEkC,UACbD,GAEL,kBAAC,EAAD,CAAgBlB,SAdF,SAACuB,GACnB1C,EAAM2C,YAAYD,EAAOE,oBAGH,kBAAC,IAAD,CAAUnC,GAAI,Y,gDCZxCoC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCeRO,sBAAQC,YAbC,SAAClB,GACrB,MAAO,CACHC,YAAaD,EAAMC,cAGA,SAACkB,GACxB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,QDPR,SAACO,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKrD,MAAMwC,OACT,kBAACW,EAAcE,KAAKrD,OADI,kBAAC,IAAD,CAAUS,GAAI,eAHV,GACX6C,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,ICI9DL,CAAwElB","file":"static/js/4.806f1f8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__olijM\",\"messages\":\"Dialogs_messages__mhQyF\",\"dialogsItems\":\"Dialogs_dialogsItems__TThP3\",\"newMessage\":\"Dialogs_newMessage__21j78\",\"btn\":\"Dialogs_btn__1isXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1fL0d\",\"active\":\"DialogItem_active__22-AP\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.img} alt=\"ава\"/>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport s from \"../../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={s.newMessage}\r\n                   component={Textarea}\r\n                   validate={[required, maxLength]}\r\n                   name=\"newMessageBody\"\r\n                   plaseholder=\"Enter your message\"/>\r\n            <button className={s.btn}>Send</button>\r\n        </form>\r\n    )\r\n}\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./Message/AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElement = state.dialogs.map(d => (<DialogItem name={d.name} key={d.id} img={d.img}/>));\r\n    let messagesElement = state.messages.map(m => (<Message message={m.message} key={m.id}/>));\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","//import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}