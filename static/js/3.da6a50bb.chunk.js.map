{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","isOwner","savePhoto","className","s","descr","img","descriptionBlock","profilePhoto","alt","src","photos","large","userPhoto","type","target","files","length","profileData","fullName","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","aboutMe","Post","post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElement","posts","map","p","key","id","reverse","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","btn","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.da6a50bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descr\":\"ProfileInfo_descr__2NKsV\",\"img\":\"ProfileInfo_img__3ded6\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1EDAG\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3w1wE\",\"profileData\":\"ProfileInfo_profileData__196v4\",\"status\":\"ProfileInfo_status__3hXEC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__rFgRQ\",\"addPost\":\"MyPosts_addPost__2s4Tn\",\"btn\":\"MyPosts_btn__3Y4H7\",\"posts\":\"MyPosts_posts__2f6-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__I9142\",\"item\":\"Post_item__2QDz1\",\"message\":\"Post_message__2A-6X\",\"likesCount\":\"Post_likesCount__W_OZV\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"No status\"}\r\n                    </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deActivateEditMode}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport userPhoto from \"../../../assets/images/user.svg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.descr}>\r\n            <div className={s.img}></div>\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.profilePhoto} alt=\"\" src={profile.photos.large || userPhoto}/>\r\n                {\r\n                    isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                }\r\n                <div className={s.status}>\r\n                    <span>Status: </span>\r\n                    <ProfileStatusWithHooks\r\n                        className={s.status}\r\n                        status={status}\r\n                        updateStatus={updateStatus}\r\n                    />\r\n                </div>\r\n                <div className={s.profileData}>\r\n                    <div>\r\n                        <strong>Full Name:</strong> {profile.fullName}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Facebook:</strong> {profile.contacts.facebook}\r\n                    </div>\r\n                    {profile.contacts.website\r\n                        ? <div><strong>Website:</strong> {profile.contacts.website}</div>\r\n                        : null}\r\n                    <div>\r\n                        <strong>VK:</strong> {profile.contacts.vk}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Twitter:</strong> {profile.contacts.twitter}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Instagram:</strong> {profile.contacts.instagram}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Youtube:</strong> {profile.contacts.youtube}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Github:</strong> {profile.contacts.github}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Main Link:</strong> {profile.contacts.mainLink}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Looking for a job:</strong> {profile.lookingForAJob}\r\n                    </div>\r\n                    <div>\r\n                        <strong>Looking for a job description:</strong> {profile.lookingForAJobDescription}\r\n                    </div>\r\n                    <div>\r\n                        <strong>About me:</strong> {profile.aboutMe}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.item}>\r\n                <img src={props.img} alt=\"\"/>\r\n                <div className={s.message}>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            <div className={s.likesCount}>\r\n                <span>Likes: </span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = props.posts.map(p => (\r\n        <Post message={p.message} likesCount={p.likesCount} key={p.id} img={p.img}/>)).reverse();\r\n\r\n    // СОЗДАНИЕ ПОСТА\r\n    //функция добавления поста\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>My posts</h2>\r\n            {/*\r\n            Форма добавления поста\r\n            */}\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form className={s.addPost} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"newPostText\"\r\n                placeholder=\"Enter your message\"\r\n                validate={[required, maxLength10]}\r\n            />\r\n            <div>\r\n                <button className={s.btn}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","// import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n            />\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}//если userId=undefined то я владелец страницы, если Id есть, то нет\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter\r\n    //withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}